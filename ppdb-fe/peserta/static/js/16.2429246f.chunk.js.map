{"version":3,"sources":["configs/apiurl.js","../node_modules/react-feather/dist/icons/eye-off.js","@core/components/input-password-toggle/index.js","../node_modules/react-feather/dist/icons/eye.js","views/auth/Register.js","configs/apiService.js"],"names":["register","lupaPassword","cek_token","changePass","apiGelombang","home","dashboardPeserta","peserta","verifikasiPeserta","biaya","gelombang","detailPeserta","uploadNilai","nilai","downloadNilai","downloadPeserta","listpeserta","uploadpeserta","detailUser","uploadExcel","updateBiodata","jumlahPerGelombang","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","EyeOff","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","createElement","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","displayName","InputPasswordToggle","props","label","hideIcon","showIcon","visible","className","htmlFor","placeholder","iconSize","inputClassName","invalid","useState","inputVisibility","setInputVisibility","for","classnames","type","id","onClick","renderIcon","defaultProps","Eye","cx","cy","r","styles","fontSize","RegisterBasic","namaPeserta","nisn","email","password","file","formatFile","data","setData","dataValidation","setDataValidation","setGelombang","successSend","setSuccessSend","loading","setLoading","loadings","setLoadings","useEffect","get","then","resp","catch","err","console","log","tag","src","image","value","autoFocus","onChange","e","style","test","evt","reader","FileReader","files","format","name","substr","toLowerCase","onload","upload","result","readAsDataURL","toast","warning","disabled","block","post","hanleSubmit","to","location","replace","URL","Promise","resolve","reject","axios","BASE_API","headers","res","error","checkError","formData","put","patch"],"mappings":"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","file":"static/js/16.2429246f.chunk.js","sourcesContent":["//AUTH\r\nexport const register = \"/register\"\r\nexport const login = \"/login\"\r\nexport const lupaPassword = \"/lupa-password\"\r\nexport const cek_token = \"/chek-token\"\r\nexport const changePass = \"/change-password\"\r\nexport const apiGelombang = \"/gelombangPendaftaran\"\r\nexport const home = \"/home\"\r\n//\r\nexport const dashboardPeserta = \"/dashboard\"\r\nexport const peserta = \"/list-peserta\"\r\nexport const verifikasiPeserta = \"/verifikasi-peserta\"\r\nexport const biaya = \"/biaya\"\r\nexport const gelombang = \"/gelombang\"\r\nexport const detailPeserta = \"/detail-peserta\"\r\nexport const uploadNilai = \"/upload-nilai\"\r\nexport const nilai = \"/nilai\"\r\nexport const downloadNilai = \"/download-Nilai\"\r\nexport const downloadPeserta = \"/download-peserta\"\r\nexport const listpeserta = \"/listpeserta\"\r\nexport const uploadpeserta = \"/upload-peserta\"\r\nexport const detailUser = \"/get-peserta\"\r\n// UPLOAD\r\nexport const uploadExcel = \"/upload-file\"\r\nexport const updateBiodata = \"/update-bio\"\r\nexport const jumlahPerGelombang = \"/listBygelombang\"","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar EyeOff = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"1\",\n    y1: \"1\",\n    x2: \"23\",\n    y2: \"23\"\n  }));\n});\nEyeOff.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEyeOff.displayName = 'EyeOff';\nexport default EyeOff;","// ** React Imports\nimport { Fragment, useState, forwardRef } from 'react'\n\n// ** Third Party Components\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\nimport { Eye, EyeOff } from 'react-feather'\n\n// ** Reactstrap Imports\nimport { InputGroup, Input, InputGroupText, Label } from 'reactstrap'\n\nconst InputPasswordToggle = forwardRef((props, ref) => {\n  // ** Props\n  const {\n    label,\n    hideIcon,\n    showIcon,\n    visible,\n    className,\n    htmlFor,\n    placeholder,\n    iconSize,\n    inputClassName,\n    invalid,\n    ...rest\n  } = props\n\n  // ** State\n  const [inputVisibility, setInputVisibility] = useState(visible)\n\n  // ** Renders Icon Based On Visibility\n  const renderIcon = () => {\n    const size = iconSize ? iconSize : 14\n\n    if (inputVisibility === false) {\n      return hideIcon ? hideIcon : <Eye size={size} />\n    } else {\n      return showIcon ? showIcon : <EyeOff size={size} />\n    }\n  }\n\n  return (\n    <Fragment>\n      {label ? (\n        <Label className='form-label' for={htmlFor}>\n          {label}\n        </Label>\n      ) : null}\n      <InputGroup\n        className={classnames({\n          [className]: className,\n          'is-invalid': invalid\n        })}\n      >\n        <Input\n          ref={ref}\n          invalid={invalid}\n          type={inputVisibility === false ? 'password' : 'text'}\n          placeholder={placeholder ? placeholder : '············'}\n          className={classnames({\n            [inputClassName]: inputClassName\n          })}\n          /*eslint-disable */\n          {...(label && htmlFor\n            ? {\n                id: htmlFor\n              }\n            : {})}\n          {...rest}\n          /*eslint-enable */\n        />\n        <InputGroupText className='cursor-pointer' onClick={() => setInputVisibility(!inputVisibility)}>\n          {renderIcon()}\n        </InputGroupText>\n      </InputGroup>\n    </Fragment>\n  )\n})\n\nexport default InputPasswordToggle\n\n// ** PropTypes\nInputPasswordToggle.propTypes = {\n  invalid: PropTypes.bool,\n  hideIcon: PropTypes.node,\n  showIcon: PropTypes.node,\n  visible: PropTypes.bool,\n  className: PropTypes.string,\n  placeholder: PropTypes.string,\n  iconSize: PropTypes.number,\n  inputClassName: PropTypes.string,\n  label(props, propName) {\n    // ** If label is defined and htmlFor is undefined throw error\n    if (props[propName] && props['htmlFor'] === 'undefined') {\n      throw new Error('htmlFor prop is required when label prop is present')\n    }\n  },\n  htmlFor(props, propName) {\n    // ** If htmlFor is defined and label is undefined throw error\n    if (props[propName] && props['label'] === 'undefined') {\n      throw new Error('label prop is required when htmlFor prop is present')\n    }\n  }\n}\n\n// ** Default Props\nInputPasswordToggle.defaultProps = {\n  visible: false\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Eye = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"3\"\n  }));\n});\nEye.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEye.displayName = 'Eye';\nexport default Eye;","// ** React Imports\r\nimport { Link } from 'react-router-dom'\r\n\r\n// ** Icons Imports\r\nimport { Facebook, Twitter, Mail, GitHub } from 'react-feather'\r\n\r\n// ** Custom Components\r\nimport InputPasswordToggle from '@components/input-password-toggle'\r\n\r\n// ** Reactstrap Imports\r\nimport { Card, CardBody, CardTitle, CardText, Form, Label, Input, Button, Media, Alert, Spinner } from 'reactstrap'\r\n\r\n// ** Styles\r\nimport '@styles/react/pages/page-authentication.scss'\r\n\r\nimport image from '../../configs/logo/logo.png'\r\nimport { useState, useEffect } from 'react'\r\nimport { get, post } from \"../../configs/apiService\"\r\nimport { apiGelombang, register } from '../../configs/apiurl'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst styles = {\r\n    fontSize: \"12px\",\r\n    color: \"red\"\r\n}\r\n\r\nconst RegisterBasic = () => {\r\n    const [data, setData] = useState({\r\n        namaPeserta: \"\",\r\n        nisn: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        file: \"\",\r\n        formatFile: \"\"\r\n    })\r\n\r\n    const [dataValidation, setDataValidation] = useState({\r\n        namaPeserta: \"\",\r\n        nisn: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        file: \"\",\r\n        formatFile: \"\"\r\n    })\r\n    const [gelombang, setGelombang] = useState(\"\")\r\n    const [successSend, setSuccessSend] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const [loadings, setLoadings] = useState(false)\r\n\r\n    const hanleSubmit = () => {\r\n        if (data.namaPeserta === \"\" ||\r\n            data.nisn === \"\" ||\r\n            data.email === \"\" ||\r\n            data.password === \"\" ||\r\n            data.file === \"\") {\r\n            setDataValidation({\r\n                namaPeserta: data.namaPeserta.length < 1 && \"Nama Peserta harus di isi\",\r\n                nisn: data.nisn.length < 1 ? \"NISN harus di isi\" : data.nisn.length < 8 && \"NISN minimal 8 digit\",\r\n                email: data.email.length < 1 && \"Email harus di isi\",\r\n                password: data.password.length < 1 && \"Password harus di isi\",\r\n                file: data.file.length < 1 && \"File harus di isi\"\r\n            })\r\n        } else {\r\n            if (/\\S+@\\S+\\.\\S+/.test(data.email) !== true) {\r\n                setDataValidation({\r\n                    ...dataValidation,\r\n                    email: \"Format email tidak sesuai\"\r\n                })\r\n                return\r\n            }\r\n            setLoading(true)\r\n            post(register, data)\r\n                .then((resp) => {\r\n                    if (resp.data && resp.data.data === \"Email Sudah Terdaftar\") {\r\n                        setDataValidation({\r\n                            ...dataValidation,\r\n                            email: \"Email Sudah Terdaftar\"\r\n                        })\r\n                    } else if (resp.data && resp.data.data === \"Pendaftaran Peserta Didik Baru Sudah Di tutup\") {\r\n                        setGelombang(\"Pendaftaran Peserta Didik Baru Sudah Di tutup\")\r\n                    } else {\r\n                        setSuccessSend(\"Pendaftaran berhasil dilakukan\")\r\n                        setData({\r\n                            namaPeserta: \"\",\r\n                            nisn: \"\",\r\n                            email: \"\",\r\n                            password: \"\",\r\n                            file: \"\",\r\n                            formatFile: \"\"\r\n                        })\r\n                    }\r\n                    setLoading(false)\r\n                })\r\n                .catch((err) => {\r\n                    setLoading(false)\r\n                    console.log(err)\r\n                })\r\n        }\r\n    }\r\n\r\n    const fileSelectedHandler = (evt) => {\r\n        const reader = new FileReader()\r\n        const file = evt.target.files[0]\r\n        const formatter = (evt.target.files[0]) ? evt.target.files[0].name.substr(-4, 4) : \"\"\r\n        const format = formatter.toLowerCase()\r\n        if (format === \".jpg\" || format === \"jpeg\" || format === \".png\") {\r\n            reader.onload = function (upload) {\r\n                setData({\r\n                    ...data,\r\n                    file: upload.target.result,\r\n                    formatFile: format\r\n                })\r\n                setDataValidation({\r\n                    ...dataValidation,\r\n                    file: \"\"\r\n                })\r\n            }\r\n            reader.readAsDataURL(file)\r\n        } else {\r\n            toast.warning(\"Poto peserta format jpg, jpeg dan png\")\r\n        }\r\n    }\r\n\r\n    const getGlombang = () => {\r\n        setLoadings(true)\r\n        get(apiGelombang)\r\n            .then((resp) => {\r\n                if (resp.data && resp.data.data === null) {\r\n                    setGelombang(\"Pendaftaran Peserta Didik Baru Sudah Di tutup\")\r\n                }\r\n                setLoadings(false)\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                setLoadings(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getGlombang()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='auth-wrapper auth-basic px-2'>\r\n            <div className='auth-inner my-2'>\r\n                {!loadings &&\r\n                    <Card className='mb-0'>\r\n                        <CardBody>\r\n                            <CardTitle tag='h4' className='mb-1 text-center'>\r\n                                <Media src={image} width=\"80px\" /> <p />\r\n                                {gelombang.length < 1 && <>Pendaftaran Peserta Didik Baru</>}\r\n                            </CardTitle>\r\n                            {gelombang.length < 1 ? <>\r\n                                {successSend &&\r\n                                    <div>\r\n                                        <Alert color='success'>\r\n                                            <h4 className='alert-heading'>Sukses</h4>\r\n                                            <div className='alert-body'>\r\n                                                {successSend}\r\n                                            </div>\r\n                                        </Alert>\r\n                                    </div>\r\n                                }\r\n                                <div>\r\n                                    <Label className={'form-label'} for='register-username'>\r\n                                        Nama Peserta\r\n                                    </Label>\r\n                                    <Input invalid={dataValidation.namaPeserta.length > 0} value={data.namaPeserta} type='text' id='register-username' placeholder='johndoe' autoFocus\r\n                                        onChange={(e) => {\r\n                                            setData({\r\n                                                ...data,\r\n                                                namaPeserta: e.target.value\r\n                                            })\r\n                                            setDataValidation({\r\n                                                ...dataValidation,\r\n                                                namaPeserta: \"\"\r\n                                            })\r\n                                        }}\r\n                                    />\r\n                                    <Label style={styles}>{dataValidation.namaPeserta}</Label>\r\n                                </div>\r\n                                <div>\r\n                                    <Label className='form-label' for='register-email'>\r\n                                        NISN\r\n                                    </Label>\r\n                                    <Input type='text' id='register-email' placeholder='NISN'\r\n                                        invalid={dataValidation.nisn.length > 0}\r\n                                        value={data.nisn}\r\n                                        onChange={(e) => {\r\n                                            const reg = /^[0-9]+$/\r\n                                            if (reg.test(e.target.value) || e.target.value.length < 1) {\r\n                                                setData({\r\n                                                    ...data,\r\n                                                    nisn: e.target.value\r\n                                                })\r\n                                            }\r\n                                            setDataValidation({\r\n                                                ...dataValidation,\r\n                                                nisn: \"\"\r\n                                            })\r\n                                        }}\r\n                                    />\r\n                                    <Label style={styles}>{dataValidation.nisn}</Label>\r\n                                </div>\r\n                                <div>\r\n                                    <Label className='form-label' for='register-email'>\r\n                                        Email\r\n                                    </Label>\r\n                                    <Input value={data.email} type='email' id='register-email' placeholder='email@example.com'\r\n                                        // className={dataValidation.email.length > 0 && 'is-invalid'}\r\n                                        invalid={dataValidation.email.length > 0}\r\n                                        onChange={(e) => {\r\n                                            setData({\r\n                                                ...data,\r\n                                                email: e.target.value\r\n                                            })\r\n                                            setDataValidation({\r\n                                                ...dataValidation,\r\n                                                email: \"\"\r\n                                            })\r\n                                        }}\r\n                                    />\r\n                                    <Label style={styles}>{dataValidation.email}</Label>\r\n                                </div>\r\n                                <div>\r\n                                    <Label className='form-label' for='register-password'>\r\n                                        Password\r\n                                    </Label>\r\n                                    <InputPasswordToggle id='register-password'\r\n                                        invalid={dataValidation.password.length > 0}\r\n                                        className={`input-group-merge`}\r\n                                        onChange={(e) => {\r\n                                            setData({\r\n                                                ...data,\r\n                                                password: e.target.value\r\n                                            })\r\n                                            setDataValidation({\r\n                                                ...dataValidation,\r\n                                                password: \"\"\r\n                                            })\r\n                                        }}\r\n                                        value={data.password}\r\n                                    />\r\n                                    <Label style={styles}>{dataValidation.password}</Label>\r\n                                </div>\r\n                                <div>\r\n                                    <Label className='form-label' for='inputFile'>\r\n                                        Foto Peserta\r\n                                    </Label>\r\n                                    <Input onChange={fileSelectedHandler} type='file' className={`${dataValidation.file.length > 0 && 'is-invalid'}`} id='inputFile' name='fileInput' />\r\n                                    <Label style={styles}>{dataValidation.file}</Label>\r\n                                </div>\r\n                                <Button color='primary' disabled={loading} block onClick={() => hanleSubmit()}>\r\n                                    {loading ? <><Spinner size={\"sm\"} /> loading</> : <>Daftar</>}\r\n                                </Button>\r\n\r\n                                <p className='text-center mt-2'>\r\n                                    <span className='me-25'>Sudah punya akun?</span>\r\n                                    <Link to='/login'>\r\n                                        <span>Masuk Disini</span>\r\n                                    </Link>\r\n                                </p>\r\n                                <p className='text-center mt-2'>\r\n                                    <Link to={\"#\"} onClick={() => location.replace(\"https://ppdb.smpithatoy.com\")}>\r\n                                        <span>Kembali</span>\r\n                                    </Link>\r\n                                </p>\r\n                            </> : <>\r\n                                <div>\r\n                                    <Alert color='warning'>\r\n                                        <h4 className='alert-heading'>Info</h4>\r\n                                        <div className='alert-body'>\r\n                                            {gelombang}\r\n                                        </div>\r\n                                    </Alert>\r\n                                </div>\r\n                            </>}\r\n                        </CardBody>\r\n                    </Card>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterBasic\r\n","import { checkError, headers, BASE_API, BASE_API_IMAGE } from \"./config\"\r\nimport axios from \"axios\"\r\n\r\nexport const get = (URL) => {\r\n  return new Promise((resolve, reject) => axios.get(`${BASE_API}${URL}`, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    }).catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n\r\nexport const post = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.post(BASE_API + URL, formData, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    })\r\n    .catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n\r\nexport const put = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.put(BASE_API + URL, formData, headers)\r\n      .then((res) => {\r\n        resolve(res)\r\n      })\r\n      .catch((error) => {\r\n        checkError(error)\r\n        reject(error)\r\n      })\r\n  )\r\n}\r\n\r\nexport const patch = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.patch(BASE_API + URL, formData, headers)\r\n      .then((res) => {\r\n        resolve(res)\r\n      })\r\n      .catch((error) => {\r\n        checkError(error)\r\n        reject(error)\r\n      })\r\n  )\r\n}\r\n\r\nexport const download = (URL) => {\r\n  return new Promise((resolve, reject) => axios.get(`${BASE_API_IMAGE}${URL}`, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    }).catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n"],"sourceRoot":""}