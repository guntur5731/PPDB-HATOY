{"version":3,"sources":["redux/layout.js","configs/logo/logo.png","assets/images/logo/logo.svg","configs/themeConfig.js","redux/navbar.js","@core/auth/jwt/jwtDefaultConfig.js","@core/auth/jwt/jwtService.js","auth/jwt/useJwt.js","redux/authentication.js","@core/auth/jwt/useJwt.js","redux/rootReducer.js","redux/store.js","utility/context/ThemeColors.js","@core/components/spinner/Fallback-spinner.js","@core/components/ripple-button/index.js","serviceWorker.js","index.js"],"names":["layoutSlice","createSlice","name","initialState","skin","themeConfig","layout","isRTL","type","lastLayout","footerType","footer","navbarType","navbar","menuHidden","menu","isHidden","contentWidth","menuCollapsed","isCollapsed","routerTransition","navbarColor","backgroundColor","reducers","handleRTL","state","action","payload","window","localStorage","setItem","JSON","stringify","handleSkin","handleLayout","handleFooterType","handleNavbarType","handleMenuHidden","handleLastLayout","handleNavbarColor","handleContentWidth","handleMenuCollapsed","handleRouterTransition","actions","app","appName","appLogoImage","require","default","customizer","scrollTop","getBookmarks","createAsyncThunk","axios","get","response","data","suggestions","bookmarks","updateBookmarked","id","post","query","handleSearchQuery","extraReducers","builder","addCase","fulfilled","objectToUpdate","find","item","isBookmarked","bookmarkIndex","findIndex","x","push","splice","loginEndpoint","registerEndpoint","refreshEndpoint","logoutEndpoint","tokenType","storageTokenKeyName","storageRefreshTokenKeyName","JwtService","jwtOverrideConfig","jwtConfig","jwtDefaultConfig","isAlreadyFetchingAccessToken","subscribers","this","interceptors","request","use","config","accessToken","getToken","headers","Authorization","error","Promise","reject","originalRequest","status","refreshToken","then","r","setToken","setRefreshToken","onAccessTokenFetched","resolve","addSubscriber","filter","callback","getItem","value","args","clear","location","reload","jwt","authSlice","userData","parse","initialUser","handleLogin","handleLogout","removeItem","rootReducer","auth","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ThemeColors","createContext","ThemeContext","children","useState","colors","setColors","useEffect","getHex","color","getComputedStyle","document","body","getPropertyValue","trim","obj","primary","light","concat","main","secondary","success","danger","warning","info","dark","Provider","SpinnerComponent","className","src","logo","alt","width","height","Button","Ripple","onClick","rest","mounted","setMounted","isRippling","setIsRippling","y","coords","setCoords","setTimeout","classnames","e","rect","target","getBoundingClientRect","clientX","left","clientY","top","style","Boolean","hostname","match","LazyApp","lazy","ReactDOM","render","fallback","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91f6b8d5.chunk.js","sourcesContent":["// ** Redux Imports\nimport { createSlice } from '@reduxjs/toolkit'\n\n// ** ThemeConfig Import\nimport themeConfig from '@configs/themeConfig'\n\nexport const layoutSlice = createSlice({\n  name: 'layout',\n  initialState: {\n    skin: themeConfig.layout.skin,\n    isRTL: themeConfig.layout.isRTL,\n    layout: themeConfig.layout.type,\n    lastLayout: themeConfig.layout.type,\n    footerType: themeConfig.layout.footer.type,\n    navbarType: themeConfig.layout.navbar.type,\n    menuHidden: themeConfig.layout.menu.isHidden,\n    contentWidth: themeConfig.layout.contentWidth,\n    menuCollapsed: themeConfig.layout.menu.isCollapsed,\n    routerTransition: themeConfig.layout.routerTransition,\n    navbarColor: themeConfig.layout.navbar.backgroundColor\n  },\n  reducers: {\n    handleRTL: (state, action) => {\n      state.isRTL = action.payload\n      window.localStorage.setItem('direction', JSON.stringify(action.payload))\n    },\n    handleSkin: (state, action) => {\n      state.skin = action.payload\n      window.localStorage.setItem('skin', JSON.stringify(action.payload))\n    },\n    handleLayout: (state, action) => {\n      state.layout = action.payload\n    },\n    handleFooterType: (state, action) => {\n      state.footerType = action.payload\n    },\n    handleNavbarType: (state, action) => {\n      state.navbarType = action.payload\n    },\n    handleMenuHidden: (state, action) => {\n      state.menuHidden = action.payload\n    },\n    handleLastLayout: (state, action) => {\n      state.lastLayout = action.payload\n    },\n    handleNavbarColor: (state, action) => {\n      state.navbarColor = action.payload\n    },\n    handleContentWidth: (state, action) => {\n      state.contentWidth = action.payload\n    },\n    handleMenuCollapsed: (state, action) => {\n      state.menuCollapsed = action.payload\n      window.localStorage.setItem('menuCollapsed', JSON.stringify(action.payload))\n    },\n    handleRouterTransition: (state, action) => {\n      state.routerTransition = action.payload\n    }\n  }\n})\n\nexport const {\n  handleRTL,\n  handleSkin,\n  handleLayout,\n  handleLastLayout,\n  handleMenuHidden,\n  handleNavbarType,\n  handleFooterType,\n  handleNavbarColor,\n  handleContentWidth,\n  handleMenuCollapsed,\n  handleRouterTransition\n} = layoutSlice.actions\n\nexport default layoutSlice.reducer\n","export default __webpack_public_path__ + \"static/media/logo.74846b6d.png\";","export default __webpack_public_path__ + \"static/media/logo.86b72fab.svg\";","// You can customize the template with the help of this file\n\n//Template config options\nconst themeConfig = {\n  app: {\n    appName: 'PPDB',\n    appLogoImage: require('@src/assets/images/logo/logo.svg').default\n  },\n  layout: {\n    isRTL: false,\n    skin: 'light', // light, dark, bordered, semi-dark\n    routerTransition: 'fadeIn', // fadeIn, fadeInLeft, zoomIn, none or check this for more transition https://animate.style/\n    type: 'vertical', // vertical, horizontal\n    contentWidth: 'boxed', // full, boxed\n    menu: {\n      isHidden: false,\n      isCollapsed: false\n    },\n    navbar: {\n      // ? For horizontal menu, navbar type will work for navMenu type\n      type: 'floating', // static , sticky , floating, hidden\n      backgroundColor: 'white' // BS color options [primary, success, etc]\n    },\n    footer: {\n      type: 'static' // static, sticky, hidden\n    },\n    customizer: false,\n    scrollTop: true // Enable scroll to top button\n  }\n}\n\nexport default themeConfig\n","// ** Redux Imports\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\n\n// ** Axios Imports\nimport axios from 'axios'\n\nexport const getBookmarks = createAsyncThunk('layout/getBookmarks', async () => {\n  const response = await axios.get('/api/bookmarks/data')\n  return {\n    data: response.data.suggestions,\n    bookmarks: response.data.bookmarks\n  }\n})\n\nexport const updateBookmarked = createAsyncThunk('layout/updateBookmarked', async id => {\n  await axios.post('/api/bookmarks/update', { id })\n  return id\n})\n\nexport const layoutSlice = createSlice({\n  name: 'layout',\n  initialState: {\n    query: '',\n    bookmarks: [],\n    suggestions: []\n  },\n  reducers: {\n    handleSearchQuery: (state, action) => {\n      state.query = action.payload\n    }\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(getBookmarks.fulfilled, (state, action) => {\n        state.suggestions = action.payload.data\n        state.bookmarks = action.payload.bookmarks\n      })\n      .addCase(updateBookmarked.fulfilled, (state, action) => {\n        let objectToUpdate\n\n        // ** find & update object\n        state.suggestions.find(item => {\n          if (item.id === action.payload) {\n            item.isBookmarked = !item.isBookmarked\n            objectToUpdate = item\n          }\n        })\n\n        // ** Get index to add or remove bookmark from array\n        const bookmarkIndex = state.bookmarks.findIndex(x => x.id === action.payload)\n\n        if (bookmarkIndex === -1) {\n          state.bookmarks.push(objectToUpdate)\n        } else {\n          state.bookmarks.splice(bookmarkIndex, 1)\n        }\n      })\n  }\n})\n\nexport const { handleSearchQuery } = layoutSlice.actions\n\nexport default layoutSlice.reducer\n","// ** Auth Endpoints\nexport default {\n  loginEndpoint: '/jwt/login',\n  registerEndpoint: '/jwt/register',\n  refreshEndpoint: '/jwt/refresh-token',\n  logoutEndpoint: '/jwt/logout',\n\n  // ** This will be prefixed in authorization header with token\n  // ? e.g. Authorization: Bearer <token>\n  tokenType: 'Bearer',\n\n  // ** Value of this property will be used as key to store JWT token in storage\n  storageTokenKeyName: 'accessToken',\n  storageRefreshTokenKeyName: 'refreshToken'\n}\n","import axios from 'axios'\nimport jwtDefaultConfig from './jwtDefaultConfig'\n\nexport default class JwtService {\n  // ** jwtConfig <= Will be used by this service\n  jwtConfig = { ...jwtDefaultConfig }\n\n  // ** For Refreshing Token\n  isAlreadyFetchingAccessToken = false\n\n  // ** For Refreshing Token\n  subscribers = []\n\n  constructor(jwtOverrideConfig) {\n    this.jwtConfig = { ...this.jwtConfig, ...jwtOverrideConfig }\n\n    // ** Request Interceptor\n    axios.interceptors.request.use(\n      config => {\n        // ** Get token from localStorage\n        const accessToken = this.getToken()\n\n        // ** If token is present add it to request's Authorization Header\n        if (accessToken) {\n          // ** eslint-disable-next-line no-param-reassign\n          config.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n        }\n        return config\n      },\n      error => Promise.reject(error)\n    )\n\n    // ** Add request/response interceptor\n    axios.interceptors.response.use(\n      response => response,\n      error => {\n        // ** const { config, response: { status } } = error\n        const { config, response } = error\n        const originalRequest = config\n\n        // ** if (status === 401) {\n        if (response && response.status === 401) {\n          if (!this.isAlreadyFetchingAccessToken) {\n            this.isAlreadyFetchingAccessToken = true\n            this.refreshToken().then(r => {\n              this.isAlreadyFetchingAccessToken = false\n\n              // ** Update accessToken in localStorage\n              this.setToken(r.data.accessToken)\n              this.setRefreshToken(r.data.refreshToken)\n\n              this.onAccessTokenFetched(r.data.accessToken)\n            })\n          }\n          const retryOriginalRequest = new Promise(resolve => {\n            this.addSubscriber(accessToken => {\n              // ** Make sure to assign accessToken according to your response.\n              // ** Check: https://pixinvent.ticksy.com/ticket/2413870\n              // ** Change Authorization header\n              originalRequest.headers.Authorization = `${this.jwtConfig.tokenType} ${accessToken}`\n              resolve(this.axios(originalRequest))\n            })\n          })\n          return retryOriginalRequest\n        }\n        return Promise.reject(error)\n      }\n    )\n  }\n\n  onAccessTokenFetched(accessToken) {\n    this.subscribers = this.subscribers.filter(callback => callback(accessToken))\n  }\n\n  addSubscriber(callback) {\n    this.subscribers.push(callback)\n  }\n\n  getToken() {\n    return localStorage.getItem(this.jwtConfig.storageTokenKeyName)\n  }\n\n  getRefreshToken() {\n    return localStorage.getItem(this.jwtConfig.storageRefreshTokenKeyName)\n  }\n\n  setToken(value) {\n    localStorage.setItem(this.jwtConfig.storageTokenKeyName, value)\n  }\n\n  setRefreshToken(value) {\n    localStorage.setItem(this.jwtConfig.storageRefreshTokenKeyName, value)\n  }\n\n  login(...args) {\n    return axios.post(this.jwtConfig.loginEndpoint, ...args)\n  }\n\n  register(...args) {\n    return axios.post(this.jwtConfig.registerEndpoint, ...args)\n  }\n\n  refreshToken() {\n    window.localStorage.clear()\n    window.location.reload()\n    return null\n    // return axios.post(this.jwtConfig.refreshEndpoint, {\n    //   refreshToken: this.getRefreshToken()\n    // })\n  }\n}\n","// ** Core JWT Import\nimport useJwt from '@src/@core/auth/jwt/useJwt'\n\nconst { jwt } = useJwt({})\n\nexport default jwt\n","// ** Redux Imports\nimport { createSlice } from '@reduxjs/toolkit'\n\n// ** UseJWT import to get config\nimport useJwt from '@src/auth/jwt/useJwt'\n\nconst config = useJwt.jwtConfig\n\nconst initialUser = () => {\n  const item = window.localStorage.getItem('userData')\n  //** Parse stored json or if none return initialValue\n  return item ? JSON.parse(item) : {}\n}\n\nexport const authSlice = createSlice({\n  name: 'authentication',\n  initialState: {\n    userData: initialUser()\n  },\n  reducers: {\n    handleLogin: (state, action) => {\n      state.userData = action.payload\n      state[config.storageTokenKeyName] = action.payload[config.storageTokenKeyName]\n      state[config.storageRefreshTokenKeyName] = action.payload[config.storageRefreshTokenKeyName]\n      localStorage.setItem('userData', JSON.stringify(action.payload))\n      localStorage.setItem(config.storageTokenKeyName, JSON.stringify(action.payload.accessToken))\n      localStorage.setItem(config.storageRefreshTokenKeyName, JSON.stringify(action.payload.refreshToken))\n    },\n    handleLogout: state => {\n      state.userData = {}\n      state[config.storageTokenKeyName] = null\n      state[config.storageRefreshTokenKeyName] = null\n      // ** Remove user, accessToken & refreshToken from localStorage\n      localStorage.removeItem('userData')\n      localStorage.removeItem(config.storageTokenKeyName)\n      localStorage.removeItem(config.storageRefreshTokenKeyName)\n    }\n  }\n})\n\nexport const { handleLogin, handleLogout } = authSlice.actions\n\nexport default authSlice.reducer\n","// ** JWT Service Import\nimport JwtService from './jwtService'\n\n// ** Export Service as useJwt\nexport default function useJwt(jwtOverrideConfig) {\n  const jwt = new JwtService(jwtOverrideConfig)\n\n  return {\n    jwt\n  }\n}\n","// ** Reducers Imports\nimport navbar from './navbar'\nimport layout from './layout'\nimport auth from './authentication'\n\nconst rootReducer = {\n  auth,\n  navbar,\n  layout\n}\n\nexport default rootReducer\n","// ** Redux Imports\nimport rootReducer from './rootReducer'\nimport { configureStore } from '@reduxjs/toolkit'\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => {\n    return getDefaultMiddleware({\n      serializableCheck: false\n    })\n  }\n})\n\nexport { store }\n","// ** React Imports\nimport { useEffect, useState, createContext } from 'react'\n\n// ** Create Context\nconst ThemeColors = createContext()\n\nconst ThemeContext = ({ children }) => {\n  // ** State\n  const [colors, setColors] = useState({})\n\n  //** ComponentDidMount\n  useEffect(() => {\n    if (window !== 'undefined') {\n      //** Get variable value\n      const getHex = color => window.getComputedStyle(document.body).getPropertyValue(color).trim()\n\n      //** Colors obj\n      const obj = {\n        primary: {\n          light: getHex('--bs-primary').concat('1a'),\n          main: getHex('--bs-primary')\n        },\n        secondary: {\n          light: getHex('--bs-secondary').concat('1a'),\n          main: getHex('--bs-secondary')\n        },\n        success: {\n          light: getHex('--bs-success').concat('1a'),\n          main: getHex('--bs-success')\n        },\n        danger: {\n          light: getHex('--bs-danger').concat('1a'),\n          main: getHex('--bs-danger')\n        },\n        warning: {\n          light: getHex('--bs-warning').concat('1a'),\n          main: getHex('--bs-warning')\n        },\n        info: {\n          light: getHex('--bs-info').concat('1a'),\n          main: getHex('--bs-info')\n        },\n        dark: {\n          light: getHex('--bs-dark').concat('1a'),\n          main: getHex('--bs-dark')\n        }\n      }\n\n      setColors({ ...obj })\n    }\n  }, [])\n\n  return <ThemeColors.Provider value={{ colors }}>{children}</ThemeColors.Provider>\n}\n\nexport { ThemeColors, ThemeContext }\n","// ** Logo\nimport logo from '@src/configs/logo/logo.png'\n\nconst SpinnerComponent = () => {\n  return (\n    <div className='fallback-spinner app-loader'>\n      <img className='fallback-logo' src={logo} alt='logo' width={60} height={60} />\n      <div className='loading'>\n        <div className='effect-1 effects'></div>\n        <div className='effect-2 effects'></div>\n        <div className='effect-3 effects'></div>\n      </div>\n    </div>\n  )\n}\n\nexport default SpinnerComponent\n","// ** React Imports\nimport { useState, useEffect } from 'react'\n\n// ** Third Party Components\nimport classnames from 'classnames'\n\n// ** Reactstrap Imports\nimport { Button } from 'reactstrap'\n\n// ** Styles\nimport './ripple-button.scss'\n\nconst RippleButton = ({ className, children, onClick, ...rest }) => {\n  // ** States\n  const [mounted, setMounted] = useState(false)\n  const [isRippling, setIsRippling] = useState(false)\n  const [coords, setCoords] = useState({ x: -1, y: -1 })\n\n  // ** Toggle mounted on mount & unmount\n  useEffect(() => {\n    setMounted(true)\n    return () => setMounted(false)\n  }, [])\n\n  // ** Check for coords and set ripple\n  useEffect(() => {\n    if (mounted) {\n      if (coords.x !== -1 && coords.y !== -1) {\n        setIsRippling(true)\n        setTimeout(() => setIsRippling(false), 500)\n      } else {\n        setIsRippling(false)\n      }\n    }\n  }, [coords])\n\n  // ** Reset Coords on ripple end\n  useEffect(() => {\n    if (mounted) {\n      if (!isRippling) setCoords({ x: -1, y: -1 })\n    }\n  }, [isRippling])\n\n  return (\n    <Button\n      className={classnames('waves-effect', {\n        [className]: className\n      })}\n      onClick={e => {\n        const rect = e.target.getBoundingClientRect()\n        setCoords({ x: e.clientX - rect.left, y: e.clientY - rect.top })\n        if (onClick) {\n          onClick(e)\n        }\n      }}\n      {...rest}\n    >\n      {children}\n      {isRippling ? (\n        <span\n          className='waves-ripple'\n          style={{\n            left: coords.x,\n            top: coords.y\n          }}\n        ></span>\n      ) : null}\n    </Button>\n  )\n}\n\n// ** PropTypes\nRippleButton.propTypes = {\n  ...Button.propTypes\n}\n\nButton.Ripple = RippleButton\n","/*eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker === null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType !== null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","// ** React Imports\nimport { Suspense, lazy } from 'react'\nimport ReactDOM from 'react-dom'\n\n// ** Redux Imports\nimport { Provider } from 'react-redux'\nimport { store } from './redux/store'\n\n// ** Intl & ThemeColors Context\nimport { ToastContainer } from 'react-toastify'\nimport { ThemeContext } from './utility/context/ThemeColors'\n\n// ** Spinner (Splash Screen)\nimport Spinner from './@core/components/spinner/Fallback-spinner'\n\n// ** Ripple Button\nimport './@core/components/ripple-button'\n\n// ** PrismJS\nimport 'prismjs'\nimport 'prismjs/themes/prism-tomorrow.css'\nimport 'prismjs/components/prism-jsx.min'\n\n// ** React Perfect Scrollbar\nimport 'react-perfect-scrollbar/dist/css/styles.css'\n\n// ** React Toastify\nimport '@styles/react/libs/toastify/toastify.scss'\n\n// ** Core styles\nimport './@core/assets/fonts/feather/iconfont.css'\nimport './@core/scss/core.scss'\nimport './assets/scss/style.scss'\n// ** Styles\nimport '@styles/react/libs/tables/react-dataTable-component.scss'\n// ** Service Worker\nimport * as serviceWorker from './serviceWorker'\n\n// ** Lazy load app\nconst LazyApp = lazy(() => import('./App'))\n\nReactDOM.render(\n  <Provider store={store}>\n    <Suspense fallback={<Spinner />}>\n      <ThemeContext>\n        <LazyApp />\n        <ToastContainer/>\n      </ThemeContext>\n    </Suspense>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}