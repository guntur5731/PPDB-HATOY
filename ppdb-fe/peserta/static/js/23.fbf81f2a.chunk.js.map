{"version":3,"sources":["configs/apiurl.js","utility/data/data.js","views/admin/peserta/dataDiri.js","views/admin/peserta/detail.js","configs/apiService.js"],"names":["register","lupaPassword","cek_token","changePass","apiGelombang","home","dashboardPeserta","peserta","verifikasiPeserta","biaya","gelombang","detailPeserta","uploadNilai","nilai","downloadNilai","downloadPeserta","listpeserta","uploadpeserta","detailUser","uploadExcel","updateBiodata","jumlahPerGelombang","dataGelombang","label","value","jenisKelamin","styles","fontSize","color","dataDiri","useState","nik","anakKe","tempatLahir","tanggalLahir","asalSekolah","data","setData","validation","setValidation","loading","setLoading","handleValidasi","moment","format","post","then","res","response","status","toast","success","message","catch","err","console","log","useEffect","get","datas","anakke","jenis_kelamin","tempat_lahir","tanggal_lahir","Date","asal_sekolah","md","sm","style","className","length","type","placeholder","maxLength","minLength","onChange","e","test","target","classNamePrefix","options","find","item","id","dateFormat","maxDate","date","disabled","onClick","size","detail","activeTab","setActiveTab","axios","xs","Tabs","toggleTab","tab","tabId","general","URL","Promise","resolve","reject","BASE_API","headers","error","checkError","formData","put","patch"],"mappings":"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","file":"static/js/23.fbf81f2a.chunk.js","sourcesContent":["//AUTH\r\nexport const register = \"/register\"\r\nexport const login = \"/login\"\r\nexport const lupaPassword = \"/lupa-password\"\r\nexport const cek_token = \"/chek-token\"\r\nexport const changePass = \"/change-password\"\r\nexport const apiGelombang = \"/gelombangPendaftaran\"\r\nexport const home = \"/home\"\r\n//\r\nexport const dashboardPeserta = \"/dashboard\"\r\nexport const peserta = \"/list-peserta\"\r\nexport const verifikasiPeserta = \"/verifikasi-peserta\"\r\nexport const biaya = \"/biaya\"\r\nexport const gelombang = \"/gelombang\"\r\nexport const detailPeserta = \"/detail-peserta\"\r\nexport const uploadNilai = \"/upload-nilai\"\r\nexport const nilai = \"/nilai\"\r\nexport const downloadNilai = \"/download-Nilai\"\r\nexport const downloadPeserta = \"/download-peserta\"\r\nexport const listpeserta = \"/listpeserta\"\r\nexport const uploadpeserta = \"/upload-peserta\"\r\nexport const detailUser = \"/get-peserta\"\r\n// UPLOAD\r\nexport const uploadExcel = \"/upload-file\"\r\nexport const updateBiodata = \"/update-bio\"\r\nexport const jumlahPerGelombang = \"/listBygelombang\"","export const dataGelombang = [\r\n    {label: \"Pilih Gelombang\", value: 0},\r\n    {label: \"Gelombang 1\", value: 1},\r\n    {label: \"Gelombang 2\", value: 2},\r\n    {label: \"Gelombang 3\", value: 3},\r\n    {label: \"Gelombang 4\", value: 4},\r\n    {label: \"Gelombang 5\", value: 5}\r\n]\r\n\r\nexport const jenisKelamin = [\r\n    {label: \"Pilih Jenis Kelamin\", value: \"\"},\r\n    {label: \"Laki-laki\", value: \"Laki-laki\"},\r\n    {label: \"Perempuan\", value: \"Perempuan\"}\r\n]","import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, CardBody, Col, Input, Label, Row, Spinner } from 'reactstrap'\r\nimport { jenisKelamin } from '../../../utility/data/data'\r\nimport Select from 'react-select'\r\nconst styles = {\r\n    fontSize: \"12px\",\r\n    color: \"red\"\r\n}\r\nimport Flatpickr from 'react-flatpickr'\r\nimport moment from 'moment'\r\nimport '@styles/react/libs/flatpickr/flatpickr.scss'\r\nimport { get, post } from \"../../../configs/apiService\"\r\nimport { detailPeserta } from '../../../configs/apiurl'\r\nimport { toast } from 'react-toastify'\r\nexport default function dataDiri() {\r\n    const [data, setData] = useState({\r\n        nik: \"\",\r\n        anakKe: \"\",\r\n        jenisKelamin: \"\",\r\n        tempatLahir: \"\",\r\n        tanggalLahir: \"\",\r\n        asalSekolah: \"\"\r\n    })\r\n    const [validation, setValidation] = useState({\r\n        nik: \"\",\r\n        anakKe: \"\",\r\n        jenisKelamin: \"\",\r\n        tempatLahir: \"\",\r\n        tanggalLahir: \"\",\r\n        asalSekolah: \"\"\r\n    })\r\n    \r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const onSubmit = () => {\r\n        setLoading(true)\r\n        data.tanggalLahir = moment(data.tanggalLahir).format(\"YYYY-MM-DD\")\r\n        post(`${detailPeserta}?update=biodata`, data).then((res) => {\r\n            if (res && res.data && res.data.response && res.data.response.status) {\r\n                toast.success(res.data.response.message)\r\n            }\r\n            setLoading(false)\r\n        }).catch((err) => {\r\n            console.log(err)\r\n            setLoading(false)\r\n        })\r\n    }\r\n\r\n    const handleValidasi = () => {\r\n        if (data.nik === \"\" ||\r\n            data.anakKe === \"\" ||\r\n            data.jenisKelamin === \"\" ||\r\n            data.tempatLahir === \"\" ||\r\n            data.tanggalLahir === \"\" ||\r\n            data.asalSekolah === \"\") {\r\n            setValidation({\r\n                ...validation,\r\n                nik: data.nik === \"\" && \"Kolom wajib diisi\",\r\n                anakKe: data.anakKe === \"\" && \"Kolom wajib diisi\",\r\n                jenisKelamin: data.jenisKelamin === \"\" && \"Kolom wajib diisi\",\r\n                tempatLahir: data.tempatLahir === \"\" && \"Kolom wajib diisi\",\r\n                tanggalLahir: data.tanggalLahir === \"\" && \"Kolom wajib diisi\",\r\n                asalSekolah: data.asalSekolah === \"\" && \"Kolom wajib diisi\"\r\n            })\r\n        } else {\r\n            onSubmit()\r\n        }\r\n    }\r\n\r\n    const getDataPeserta = () => {\r\n        setLoading(true)\r\n        get(detailPeserta)\r\n          .then((res) => {\r\n            if (res && res.data && res.data.data) {\r\n              const datas = res.data.data\r\n              setData({\r\n                nik: datas.nik !== null ? datas.nik : \"\",\r\n                anakKe: datas.anakke !== null ? datas.anakke : \"\",\r\n                jenisKelamin: datas.jenis_kelamin !== null ? datas.jenis_kelamin : \"\",\r\n                tempatLahir: datas.tempat_lahir !== null ? datas.tempat_lahir : \"\",\r\n                tanggalLahir: datas.tanggal_lahir !== null ? new Date(datas.tanggal_lahir) : \"\",\r\n                asalSekolah: datas.asal_sekolah !== null ? datas.asal_sekolah : \"\"\r\n              })\r\n            }\r\n            setLoading(false)\r\n          }).catch((err) => {\r\n            console.log(err)\r\n            setLoading(false)\r\n          })\r\n      }\r\n    \r\n      useEffect(() => {\r\n        getDataPeserta()\r\n      }, [])\r\n\r\n    return (\r\n        <Col md={12} sm={12}>\r\n            <Card>\r\n                <CardBody>\r\n                    <Row>\r\n                        <Col sm={12} md={12}>\r\n                            <Label>NIK <span style={{ color: \"red\" }}>*</span></Label>\r\n                            <Input\r\n                                className={validation.nik.length > 0 && 'is-invalid'}\r\n                                type='text'\r\n                                placeholder='NIK'\r\n                                maxLength={20}\r\n                                minLength={10}\r\n                                value={data.nik}\r\n                                onChange={(e) => {\r\n                                    const reg = /^[0-9]+$/\r\n                                    if (reg.test(e.target.value) || e.target.value.length < 1) {\r\n                                        setData({\r\n                                            ...data,\r\n                                            nik: e.target.value\r\n                                        })\r\n                                    }\r\n                                    setValidation({\r\n                                        ...validation,\r\n                                        nik: \"\"\r\n                                    })\r\n                                }}\r\n                            />\r\n                            <Label style={styles}>{validation.nik}</Label>\r\n                        </Col>\r\n                        <Col sm={12} md={12}>\r\n                            <Label>Anak Ke <span style={{ color: \"red\" }}>*</span></Label>\r\n                            <Input type='text' value={data.anakKe} placeholder='Anak Ke'\r\n                                className={validation.anakKe.length > 0 && 'is-invalid'}\r\n                                maxLength={2}\r\n                                onChange={(e) => {\r\n                                    const reg = /^[0-9]+$/\r\n                                    if (reg.test(e.target.value) || e.target.value.length < 1) {\r\n                                        setData({\r\n                                            ...data,\r\n                                            anakKe: e.target.value\r\n                                        })\r\n                                    }\r\n                                    setValidation({\r\n                                        ...validation,\r\n                                        anakKe: \"\"\r\n                                    })\r\n                                }} />\r\n                            <Label style={styles}>{validation.anakKe}</Label>\r\n                        </Col>\r\n                        <Col sm={12} md={12}>\r\n                            <Label>Jenis Kelamin <span style={{ color: \"red\" }}>*</span></Label>\r\n                            <Select\r\n                                className={`${validation.jenisKelamin.length > 0 && 'is-invalid'} react-select`}\r\n                                classNamePrefix='select'\r\n                                options={jenisKelamin}\r\n                                value={jenisKelamin.find(item => item.value === data.jenisKelamin)}\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        jenisKelamin: e.value\r\n                                    })\r\n                                    setValidation({\r\n                                        ...validation,\r\n                                        jenisKelamin: \"\"\r\n                                    })\r\n                                }}\r\n                                placeholder=\"Tanggal\"\r\n                            />\r\n                            <Label style={styles}>{validation.jenisKelamin}</Label>\r\n                        </Col>\r\n                        <Col sm={12} md={12}>\r\n                            <Label>Tempat Lahir <span style={{ color: \"red\" }}>*</span></Label>\r\n                            <Input type='text' value={data.tempatLahir} placeholder='Tempat Lahir'\r\n                                className={validation.tempatLahir.length > 0 && 'is-invalid'}\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        tempatLahir: e.target.value\r\n                                    })\r\n                                    setValidation({\r\n                                        ...validation,\r\n                                        tempatLahir: \"\"\r\n                                    })\r\n                                }} \r\n                                />\r\n                            <Label style={styles}>{validation.tempatLahir}</Label>\r\n                        </Col>\r\n                        <Col sm={12} md={12}>\r\n                            <Label>Tanggal Lahir <span style={{ color: \"red\" }}>*</span></Label>\r\n                            <Flatpickr\r\n                                className={`${validation.tanggalLahir.length > 0 && 'is-invalid'} form-control`}\r\n                                value={data.tanggalLahir}\r\n                                id='default-picker'\r\n                                options={{\r\n                                    dateFormat: 'd-M-Y',\r\n                                    maxDate: new Date()\r\n                                }}\r\n                                onChange={(date) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        tanggalLahir: new Date(date)\r\n                                    })\r\n                                    setValidation({\r\n                                        ...validation,\r\n                                        tanggalLahir: \"\"\r\n                                    })\r\n                                }}\r\n                            />\r\n                            <Label style={styles}>{validation.tempatLahir}</Label>\r\n                        </Col>\r\n                        <Col sm={12} md={12}>\r\n                            <Label>Asal Sekolah <span style={{ color: \"red\" }}>*</span></Label>\r\n                            <Input type='text' value={data.asalSekolah} placeholder='Asal Sekolah'\r\n                                className={validation.asalSekolah.length > 0 && 'is-invalid'}\r\n                                onChange={(e) => {\r\n                                    setData({\r\n                                        ...data,\r\n                                        asalSekolah: e.target.value\r\n                                    })\r\n                                    setValidation({\r\n                                        ...validation,\r\n                                        asalSekolah: \"\"\r\n                                    })\r\n                                }} />\r\n                            <Label style={styles}>{validation.asalSekolah}</Label>\r\n                        </Col>\r\n                        <Col sm={12} md={12}>\r\n                            <Button disabled={loading} onClick={() => {\r\n                                handleValidasi()\r\n                            }} color='success'>{loading ? <><Spinner size={'sm'}/> Loading</> : <>Simpan</>} </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport React, { Fragment, useEffect, useState } from 'react'\r\nimport { Col, Row, TabContent, TabPane } from 'reactstrap'\r\nimport DataDiri from \"./dataDiri\"\r\nexport default function detail() {\r\n   // ** States\r\n   const [activeTab, setActiveTab] = useState('1')\r\n   const [data, setData] = useState(null)\r\n \r\n   const toggleTab = tab => {\r\n     setActiveTab(tab)\r\n   }\r\n \r\n   useEffect(() => {\r\n     axios.get('/account-setting/data').then(response => setData(response.data))\r\n   }, [])\r\n \r\n   return (\r\n     <Fragment>\r\n       {data !== null ? (\r\n         <Row>\r\n           <Col xs={12}>\r\n             <Tabs className='mb-2' activeTab={activeTab} toggleTab={toggleTab} />\r\n \r\n             <TabContent activeTab={activeTab}>\r\n               <TabPane tabId='1'>\r\n                 <DataDiri data={data.general} />\r\n               </TabPane>\r\n             </TabContent>\r\n           </Col>\r\n         </Row>\r\n       ) : null}\r\n     </Fragment>\r\n   )\r\n}\r\n","import { checkError, headers, BASE_API, BASE_API_IMAGE } from \"./config\"\r\nimport axios from \"axios\"\r\n\r\nexport const get = (URL) => {\r\n  return new Promise((resolve, reject) => axios.get(`${BASE_API}${URL}`, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    }).catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n\r\nexport const post = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.post(BASE_API + URL, formData, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    })\r\n    .catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n\r\nexport const put = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.put(BASE_API + URL, formData, headers)\r\n      .then((res) => {\r\n        resolve(res)\r\n      })\r\n      .catch((error) => {\r\n        checkError(error)\r\n        reject(error)\r\n      })\r\n  )\r\n}\r\n\r\nexport const patch = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.patch(BASE_API + URL, formData, headers)\r\n      .then((res) => {\r\n        resolve(res)\r\n      })\r\n      .catch((error) => {\r\n        checkError(error)\r\n        reject(error)\r\n      })\r\n  )\r\n}\r\n\r\nexport const download = (URL) => {\r\n  return new Promise((resolve, reject) => axios.get(`${BASE_API_IMAGE}${URL}`, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    }).catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n"],"sourceRoot":""}