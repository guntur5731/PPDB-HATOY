{"version":3,"sources":["configs/apiurl.js","utility/TEMPLATE_UPLOAD_NILAI.xlsx","views/admin/nilai/index.js","configs/apiService.js"],"names":["register","lupaPassword","cek_token","changePass","apiGelombang","home","dashboardPeserta","peserta","verifikasiPeserta","biaya","gelombang","detailPeserta","uploadNilai","nilai","downloadNilai","downloadPeserta","listpeserta","uploadpeserta","detailUser","uploadExcel","updateBiodata","jumlahPerGelombang","styles","fontSize","color","index","useState","loading","setLoading","searchValue","setSearchValue","filteredData","setFilteredData","files","setFile","columsPreview","setColumsPreview","previewData","setPreviewData","loadingPreview","serLoadingPreview","noRegis","nilaiAkademik","nilaiRapot","nilaiWawancara","name","inputs","setInputs","validationData","setValidationData","data","setData","centeredModal","setCenteredModal","uploadModal","setUploadModal","validasiUpload","setValidasiUpload","loadingSubmit","setLoadingSubmit","handleGetData","get","then","resp","catch","err","console","log","useEffect","handleValidation","post","res","response","status","toast","success","md","sm","className","size","onClick","style","marginLeft","caret","tag","warning","target","href","BASE_API_DOWNLOAD","CODE_EXPORT_EXCEL","for","type","bsSize","id","value","onChange","e","updatedData","length","filter","item","startsWith","id_registrasi","toLowerCase","includes","handleFilter","progressPending","columns","sortable","selector","row","nisn","akademik","lisan","rapor","hasil_perhitungan","status_kelulusan","pagination","noHeader","onRowDoubleClicked","handleRowClick","backdrop","isOpen","toggle","readOnly","disabled","maxLength","placeholder","test","myTemplate","marginTop","form","FormData","append","datas","key","Object","keys","_colums","forEach","push","toLocaleUpperCase","replaceAll","maxWidth","wrap","splice","uploadData","message","URL","Promise","resolve","reject","axios","BASE_API","headers","error","checkError","formData","put","patch"],"mappings":"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","file":"static/js/31.651113f6.chunk.js","sourcesContent":["//AUTH\r\nexport const register = \"/register\"\r\nexport const login = \"/login\"\r\nexport const lupaPassword = \"/lupa-password\"\r\nexport const cek_token = \"/chek-token\"\r\nexport const changePass = \"/change-password\"\r\nexport const apiGelombang = \"/gelombangPendaftaran\"\r\nexport const home = \"/home\"\r\n//\r\nexport const dashboardPeserta = \"/dashboard\"\r\nexport const peserta = \"/list-peserta\"\r\nexport const verifikasiPeserta = \"/verifikasi-peserta\"\r\nexport const biaya = \"/biaya\"\r\nexport const gelombang = \"/gelombang\"\r\nexport const detailPeserta = \"/detail-peserta\"\r\nexport const uploadNilai = \"/upload-nilai\"\r\nexport const nilai = \"/nilai\"\r\nexport const downloadNilai = \"/download-Nilai\"\r\nexport const downloadPeserta = \"/download-peserta\"\r\nexport const listpeserta = \"/listpeserta\"\r\nexport const uploadpeserta = \"/upload-peserta\"\r\nexport const detailUser = \"/get-peserta\"\r\n// UPLOAD\r\nexport const uploadExcel = \"/upload-file\"\r\nexport const updateBiodata = \"/update-bio\"\r\nexport const jumlahPerGelombang = \"/listBygelombang\"","export default __webpack_public_path__ + \"static/media/TEMPLATE_UPLOAD_NILAI.50ee2cec.xlsx\";","import React, { useEffect, useState } from 'react'\r\nimport DataTable from 'react-data-table-component'\r\nimport { toast } from 'react-toastify'\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, DropdownItem, DropdownMenu, DropdownToggle, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader, Row, Spinner, UncontrolledButtonDropdown } from 'reactstrap'\r\nimport { get, post } from '../../../configs/apiService'\r\nimport { BASE_API_DOWNLOAD, CODE_EXPORT_EXCEL } from \"../../../configs/config\"\r\nimport { downloadNilai, nilai, uploadExcel, uploadNilai } from '../../../configs/apiurl'\r\nconst styles = {\r\n    fontSize: \"12px\",\r\n    color: \"red\"\r\n}\r\n// import * as FileSaver from \"file-saver\"\r\n// import XLSX from \"sheetjs-style\"\r\n// import jsPDF from \"jspdf\"\r\nimport \"jspdf-autotable\"\r\nimport myTemplate from '../../../utility/TEMPLATE_UPLOAD_NILAI.xlsx'\r\n\r\nexport default function index() {\r\n    const [loading, setLoading] = useState(false)\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n    const [filteredData, setFilteredData] = useState([])\r\n    const [files, setFile] = useState()\r\n    const [columsPreview, setColumsPreview] = useState([])\r\n    const [previewData, setPreviewData] = useState([])\r\n    const [loadingPreview, serLoadingPreview] = useState(false)\r\n    const columns = [\r\n        {\r\n            name: 'ID Registrasi',\r\n            sortable: true,\r\n            selector: row => row.id_registrasi\r\n        },\r\n        {\r\n            name: 'Nama',\r\n            sortable: true,\r\n            selector: row => row.name\r\n        },\r\n        {\r\n            name: 'NISN',\r\n            sortable: true,\r\n            selector: row => row.nisn\r\n        },\r\n        {\r\n            name: 'Nilai Akademik',\r\n            sortable: true,\r\n            selector: row => row.akademik\r\n        },\r\n        {\r\n            name: 'Nilai Wawancara & BTQ',\r\n            sortable: true,\r\n            selector: row => row.lisan\r\n        },\r\n        {\r\n            name: 'Nilai Rapor',\r\n            sortable: true,\r\n            selector: row => row.rapor\r\n        },\r\n        {\r\n            name: 'Hasil Perhitungan',\r\n            sortable: true,\r\n            selector: row => row.hasil_perhitungan\r\n        },\r\n        {\r\n            name: 'Status Kelulusan',\r\n            sortable: true,\r\n            selector: row => row.status_kelulusan\r\n        }\r\n    ]\r\n    const [inputs, setInputs] = useState({\r\n        noRegis: \"\",\r\n        nilaiAkademik: \"\",\r\n        nilaiRapot: \"\",\r\n        nilaiWawancara: \"\",\r\n        name: \"\"\r\n    })\r\n    const [validationData, setValidationData] = useState({\r\n        nilaiAkademik: \"\",\r\n        nilaiRapot: \"\",\r\n        nilaiWawancara: \"\"\r\n    })\r\n    const [data, setData] = useState([])\r\n    const [centeredModal, setCenteredModal] = useState(false)\r\n    const [uploadModal, setUploadModal] = useState(false)\r\n    const [validasiUpload, setValidasiUpload] = useState(\"\")\r\n    const [loadingSubmit, setLoadingSubmit] = useState(false)\r\n    const handleGetData = () => {\r\n        setLoading(true)\r\n        get(nilai)\r\n            .then((resp) => {\r\n                if (resp && resp.data && resp.data.data) {\r\n                    setData(resp.data.data)\r\n                }\r\n                setLoading(false)\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                setLoading(false)\r\n\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleGetData()\r\n        \r\n    }, [])\r\n\r\n    const handleRowClick = (row) => {\r\n        setCenteredModal(!centeredModal)\r\n        setInputs({\r\n            noRegis: row.id_registrasi,\r\n            name: row.name,\r\n            nilaiRapot: row.rapor === \"-\" ? \"\" : row.rapor,\r\n            nilaiAkademik: row.akademik === \"-\" ? \"\" : row.akademik,\r\n            nilaiWawancara: row.lisan === \"-\" ? \"\" : row.lisan\r\n        })\r\n        setValidationData({\r\n            nilaiAkademik: \"\",\r\n            nilaiRapot: \"\",\r\n            nilaiWawancara: \"\"\r\n        })\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        setLoading(true)\r\n        post(nilai, inputs)\r\n            .then((res) => {\r\n                if (res && res.data && res.data.response && res.data.response.status) {\r\n                    toast.success(\"Berhasil menyimpan data\")\r\n                    handleGetData()\r\n                    setCenteredModal(!centeredModal)\r\n                }\r\n                setLoading(false)\r\n\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleValidation = () => {\r\n        if ((inputs.nilaiRapot === \"\" || inputs.nilaiRapot > 100) ||\r\n            (inputs.nilaiAkademik === \"\" || inputs.nilaiAkademik > 100) ||\r\n            (inputs.nilaiWawancara === \"\" || inputs.nilaiWawancara > 100)) {\r\n            setValidationData({\r\n                nilaiAkademik: inputs.nilaiAkademik === \"\" ? \"Kolom harus di isi\" : inputs.nilaiAkademik > 100 && \"Nilai tidak boleh melebihi 100\",\r\n                nilaiRapot: inputs.nilaiRapot === \"\" ? \"Kolom harus di isi\" : inputs.nilaiRapot > 100 && \"Nilai tidak boleh melebihi 100\",\r\n                nilaiWawancara: inputs.nilaiWawancara === \"\" ? \"Kolom harus di isi\" : inputs.nilaiWawancara > 100 && \"Nilai tidak boleh melebihi 100\"\r\n            })\r\n        } else {\r\n            onSubmit()\r\n        }\r\n    }\r\n\r\n    const handleFilter = (value) => {\r\n        let updatedData = []\r\n        setSearchValue(value)\r\n        if (value.length) {\r\n            updatedData = data.filter(item => {\r\n                const startsWith =\r\n                    item.id_registrasi.toLowerCase().startsWith(value.toLowerCase()) ||\r\n                    item.name.toLowerCase().startsWith(value.toLowerCase())\r\n\r\n                const includes =\r\n                    item.id_registrasi.toLowerCase().includes(value.toLowerCase()) ||\r\n                    item.name.toLowerCase().includes(value.toLowerCase())\r\n\r\n                if (startsWith) {\r\n                    return startsWith\r\n                } else if (!startsWith && includes) {\r\n                    return includes\r\n                } else return null\r\n            })\r\n            setFilteredData(updatedData)\r\n        }\r\n    }\r\n\r\n    // function convertArrayOfObjectsToCSV(array) {\r\n    //     let result\r\n\r\n    //     const columnDelimiter = ','\r\n    //     const lineDelimiter = '\\n'\r\n    //     const keys = Object.keys(data[0])\r\n\r\n    //     result = ''\r\n    //     result += keys.join(columnDelimiter)\r\n    //     result += lineDelimiter\r\n\r\n    //     array.forEach(item => {\r\n    //         let ctr = 0\r\n    //         keys.forEach(key => {\r\n    //             if (ctr > 0) result += columnDelimiter\r\n\r\n    //             result += item[key]\r\n\r\n    //             ctr++\r\n    //         })\r\n    //         result += lineDelimiter\r\n    //     })\r\n\r\n    //     return result\r\n    // }\r\n\r\n    // function downloadCSV(array) {\r\n    //     const link = document.createElement('a')\r\n    //     let csv = convertArrayOfObjectsToCSV(array)\r\n    //     if (csv === null) return\r\n\r\n    //     const filename = 'export data nilai.csv'\r\n\r\n    //     if (!csv.match(/^data:text\\/csv/i)) {\r\n    //         csv = `data:text/csv;charset=utf-8,${csv}`\r\n    //     }\r\n\r\n    //     link.setAttribute('href', encodeURI(csv))\r\n    //     link.setAttribute('download', filename)\r\n    //     link.click()\r\n    // }\r\n\r\n    // const fileType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8\"\r\n    // const fileExtension = \".xlsx\"\r\n\r\n    // const excelDownload = () => {\r\n    //     return\r\n    //     const a = document.createElement('a')\r\n    //     a.href = downloadNilai\r\n    //     document.body.appendChild(a)\r\n    //     a.click()\r\n    //     a.remove()\r\n    //     return\r\n    //     const filename = \"export data nilai\"\r\n    //     const ws = XLSX.utils.json_to_sheet(data)\r\n    //     const wb = { Sheets: { data: ws }, SheetNames: ['data'] }\r\n\r\n    //     const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' })\r\n    //     const datas = new Blob([excelBuffer], { type: fileType })\r\n    //     FileSaver.saveAs(datas, filename + fileExtension)\r\n    // }\r\n\r\n    // const exportPDF = () => {\r\n    //     const unit = \"pt\"\r\n    //     const size = \"A4\" // Use A1, A2, A3 or A4\r\n    //     const orientation = \"landscape\" // portrait or landscape\r\n\r\n    //     const marginLeft = 40\r\n    //     const doc = new jsPDF(orientation, unit, size)\r\n\r\n    //     doc.setFontSize(15)\r\n\r\n    //     const title = \"EXPORT DATA NILAI CALON PESERTA DIDIK\"\r\n    //     const headers = [[\"NO REGISTRASI\", \"NISN\", \"NAME\", \"NILAI RAPOR\", \"NILAI WAWANCARA & BTQ\", \"NILAI AKADEMIK\", \"HASIL PERHITUNGAN\", \"STATUS KELULUSAN\"]]\r\n\r\n    //     const datas = data.map(elt => [elt.id_registrasi, elt.nisn, elt.name, elt.rapor, elt.lisan, elt.akademik, elt.hasil_perhitungan, elt.status_kelulusan])\r\n\r\n    //     const content = {\r\n    //         startY: 50,\r\n    //         head: headers,\r\n    //         body: datas\r\n    //     }\r\n\r\n    //     doc.text(title, marginLeft, 40)\r\n    //     doc.autoTable(content)\r\n    //     doc.save(\"report.pdf\")\r\n    //     excelDownload()\r\n    // }\r\n\r\n    const uploadData = () => {\r\n        if (files) {\r\n            const form = new FormData()\r\n            form.append('file', files)\r\n            serLoadingPreview(true)\r\n            post(uploadExcel, form)\r\n                .then((res) => {\r\n                    if (res && res.data && res.data.data) {\r\n                        const datas = res.data.data\r\n                        if (datas.length > 0) {\r\n                            const key = Object.keys(datas[0])\r\n                            const _colums = []\r\n                            if (key.length > 0) {\r\n                                key.forEach((item) => {\r\n                                    _colums.push(\r\n                                        {\r\n                                            name: item.toLocaleUpperCase().replaceAll(\"_\", \" \"),\r\n                                            sortable: true,\r\n                                            maxWidth: \"200px\",\r\n                                            selector: (row) => row[item],\r\n                                            wrap: true\r\n                                        }\r\n                                    )\r\n                                })\r\n                                setColumsPreview(_colums)\r\n                            }\r\n                        }\r\n                        datas.splice(0, 1)\r\n                        setPreviewData(datas)\r\n                    }\r\n                    serLoadingPreview(false)\r\n                }).catch((err) => {\r\n                    console.log(err)\r\n                    serLoadingPreview(false)\r\n                })\r\n        } else {\r\n            setValidasiUpload(\"File belum di pilih\")\r\n        }\r\n    }\r\n\r\n    const handleUploadData = () => {\r\n        setLoadingSubmit(true)\r\n        post(uploadNilai, previewData)\r\n            .then((res) => {\r\n                if (res && res.data && res.data.response && res.data.response.status) {\r\n                    toast.success(res.data.response.message)\r\n                    setUploadModal(!uploadModal)\r\n                    setPreviewData([])\r\n                    handleGetData()\r\n                } else if (res && res.data && res.data.response && res.data.response.message && res.data.data !== \"\") {\r\n                    toast.warning(res.data.data)\r\n                }\r\n                setLoadingSubmit(false)\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                setLoadingSubmit(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col md={12} sm={12}>\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <CardTitle>\r\n                                Nilai\r\n                            </CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <Row className='x-0'>\r\n                                <Col className='mt-1' md='6' sm='12'>\r\n                                    <Button size='sm' color='success' onClick={() => {\r\n                                        setUploadModal(!uploadModal)\r\n                                    }}>Upload</Button>\r\n\r\n                                    <UncontrolledButtonDropdown size='sm' style={{ marginLeft: \"10px\" }}>\r\n                                        <DropdownToggle color='info' caret>\r\n                                            Download\r\n                                        </DropdownToggle>\r\n                                        <DropdownMenu>\r\n                                            <DropdownItem tag='a' onClick={() => toast.warning(\"COMING SOON\")}>\r\n                                                CSV\r\n                                            </DropdownItem>\r\n                                            <DropdownItem tag='a' target=\"_blank\" href={`${BASE_API_DOWNLOAD}${downloadNilai}?type=${CODE_EXPORT_EXCEL}`}>\r\n                                                Excel\r\n                                            </DropdownItem>\r\n                                            <DropdownItem tag='a'  onClick={() => toast.warning(\"COMING SOON\")}>\r\n                                                Pdf\r\n                                            </DropdownItem>\r\n                                        </DropdownMenu>\r\n                                    </UncontrolledButtonDropdown>\r\n                                </Col>\r\n                                <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\r\n                                    <Label className='me-1' for='search-input'>\r\n                                        Search\r\n                                    </Label>\r\n                                    <Input\r\n                                        className='dataTable-filter mb-50'\r\n                                        type='text'\r\n                                        bsSize='sm'\r\n                                        id='search-input'\r\n                                        value={searchValue}\r\n                                        onChange={(e) => handleFilter(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <DataTable\r\n                                progressPending={loading}\r\n                                columns={columns}\r\n                                data={searchValue.length ? filteredData : data}\r\n                                pagination\r\n                                noHeader\r\n                                onRowDoubleClicked={(row) => handleRowClick(row)}\r\n                            />\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Modal backdrop=\"static\" isOpen={centeredModal} toggle={() => setCenteredModal(!centeredModal)} className='modal-dialog-centered'>\r\n                <ModalHeader toggle={() => setCenteredModal(!centeredModal)}>Input Nilai</ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col md={12} sm={12}>\r\n                            <Label>No Registrasi</Label>\r\n                            <Input type='text' readOnly value={inputs.noRegis} disabled={true} />\r\n                        </Col>\r\n                        <Col md={12} sm={12}>\r\n                            <Label>Nama</Label>\r\n                            <Input type='text' readOnly value={inputs.name} disabled={true} />\r\n                        </Col>\r\n                        <Col md={12} sm={12}>\r\n                            <Label>Nilai Akademik</Label>\r\n                            <Input type='text'\r\n                                maxLength={3}\r\n                                value={inputs.nilaiAkademik}\r\n                                className={validationData.nilaiAkademik.length > 0 && 'is-invalid'}\r\n                                placeholder=\"Masukan Nilai Akademik\"\r\n                                onChange={(e) => {\r\n                                    const reg = /^[0-9]+$/\r\n                                    if (reg.test(e.target.value) || e.target.value.length < 1) {\r\n                                        setInputs({\r\n                                            ...inputs,\r\n                                            nilaiAkademik: e.target.value\r\n                                        })\r\n                                    }\r\n                                    setValidationData({\r\n                                        ...validationData,\r\n                                        nilaiAkademik: \"\"\r\n                                    })\r\n                                }}\r\n                            />\r\n                            <Label style={styles}>{validationData.nilaiAkademik}</Label>\r\n                        </Col>\r\n                        <Col md={12} sm={12}>\r\n                            <Label>Nilai Lisan & BTQ</Label>\r\n                            <Input type='text'\r\n                                maxLength={3}\r\n                                value={inputs.nilaiWawancara}\r\n                                className={validationData.nilaiWawancara.length > 0 && 'is-invalid'}\r\n                                placeholder=\"Masukan Nilai Lisan & BTQ\"\r\n                                onChange={(e) => {\r\n                                    const reg = /^[0-9]+$/\r\n                                    if (reg.test(e.target.value) || e.target.value.length < 1) {\r\n                                        setInputs({\r\n                                            ...inputs,\r\n                                            nilaiWawancara: e.target.value\r\n                                        })\r\n                                    }\r\n                                    setValidationData({\r\n                                        ...validationData,\r\n                                        nilaiWawancara: \"\"\r\n                                    })\r\n                                }} />\r\n                            <Label style={styles}>{validationData.nilaiWawancara}</Label>\r\n                        </Col>\r\n                        <Col md={12} sm={12}>\r\n                            <Label>Nilai Rapor</Label>\r\n                            <Input type='text'\r\n                                maxLength={3}\r\n                                value={inputs.nilaiRapot}\r\n                                placeholder=\"Masukan Nilai Rapor\"\r\n                                className={validationData.nilaiRapot.length > 0 && 'is-invalid'}\r\n                                onChange={(e) => {\r\n                                    const reg = /^[0-9]+$/\r\n                                    if (reg.test(e.target.value) || e.target.value.length < 1) {\r\n                                        setInputs({\r\n                                            ...inputs,\r\n                                            nilaiRapot: e.target.value\r\n                                        })\r\n                                    }\r\n                                    setValidationData({\r\n                                        ...validationData,\r\n                                        nilaiRapot: \"\"\r\n                                    })\r\n                                }} />\r\n                            <Label style={styles}>{validationData.nilaiRapot}</Label>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color='success' onClick={() => handleValidation()}>\r\n                        {loading ? <><Spinner size={'sm'} /> loading </> : \"Simpan\"}\r\n                    </Button>{' '}\r\n                </ModalFooter>\r\n            </Modal>\r\n            <Modal backdrop=\"static\" isOpen={uploadModal} size={'lg'}\r\n                toggle={() => {\r\n                    if (!loadingPreview && !loadingSubmit) {\r\n                        setUploadModal(!uploadModal)\r\n                    }\r\n                }}\r\n                className='modal-dialog-centered'>\r\n                <ModalHeader\r\n                    toggle={() => {\r\n                        if (!loadingPreview && !loadingSubmit) {\r\n                            setUploadModal(!uploadModal)\r\n                        }\r\n                    }}\r\n                >Upload Data Nilai Peserta</ModalHeader>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col md={12} sm={12} className={\"mb-1\"}>\r\n                            <a href={myTemplate} target=\"_blank\">Download Template Upload Excel</a>\r\n                        </Col>\r\n                        <Col md={12} sm={12}>\r\n                            <Label>File</Label>\r\n                            <Input type='file' onChange={(e) => {\r\n                                setFile(e.target.files[0])\r\n                                setValidasiUpload(\"\")\r\n                            }} />\r\n                            {validasiUpload.length > 0 && <Label style={{ color: \"red\", fontSize: \"12px\" }}>{validasiUpload}</Label>}\r\n                            <br />\r\n                            <Button size={\"sm\"} disabled={loadingPreview} style={{ marginTop: \"5px\" }} color='success' onClick={() => uploadData()}>\r\n                                {loadingPreview ? <><Spinner size={\"sm\"} /> Loading</> : \"preview\"}\r\n                            </Button>\r\n                        </Col>\r\n                        <Col md={12} sm={12}>\r\n                            <DataTable\r\n                                columns={columsPreview}\r\n                                data={previewData}\r\n                                pagination\r\n                                progressPending={loadingPreview}\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    {previewData.length > 0 &&\r\n                        <Button disabled={loadingSubmit} color='success' onClick={() => handleUploadData()}>\r\n                            {loadingSubmit ? <><Spinner size={\"sm\"} /> Loading</> : \"upload\"}\r\n                        </Button>\r\n                    }\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n","import { checkError, headers, BASE_API, BASE_API_IMAGE } from \"./config\"\r\nimport axios from \"axios\"\r\n\r\nexport const get = (URL) => {\r\n  return new Promise((resolve, reject) => axios.get(`${BASE_API}${URL}`, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    }).catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n\r\nexport const post = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.post(BASE_API + URL, formData, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    })\r\n    .catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n\r\nexport const put = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.put(BASE_API + URL, formData, headers)\r\n      .then((res) => {\r\n        resolve(res)\r\n      })\r\n      .catch((error) => {\r\n        checkError(error)\r\n        reject(error)\r\n      })\r\n  )\r\n}\r\n\r\nexport const patch = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.patch(BASE_API + URL, formData, headers)\r\n      .then((res) => {\r\n        resolve(res)\r\n      })\r\n      .catch((error) => {\r\n        checkError(error)\r\n        reject(error)\r\n      })\r\n  )\r\n}\r\n\r\nexport const download = (URL) => {\r\n  return new Promise((resolve, reject) => axios.get(`${BASE_API_IMAGE}${URL}`, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    }).catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n"],"sourceRoot":""}