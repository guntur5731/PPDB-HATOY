{"version":3,"sources":["configs/apiurl.js","views/admin/verifikasi/index.js","configs/apiService.js"],"names":["register","lupaPassword","cek_token","changePass","apiGelombang","home","dashboardPeserta","peserta","verifikasiPeserta","biaya","gelombang","detailPeserta","uploadNilai","nilai","downloadNilai","downloadPeserta","listpeserta","uploadpeserta","detailUser","uploadExcel","updateBiodata","jumlahPerGelombang","MySwal","withReactContent","Swal","verifikasi","colums","name","sortable","selector","row","id_registrasi","nisn","email","cell","color","is_verifikasi","useState","data","setData","basicModal","setBasicModal","selectedData","setSelectedData","getPeserta","get","then","resp","catch","err","console","log","useEffect","handleConfirmText","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","buttonsStyling","result","value","post","res","response","status","timer","lg","sm","md","columns","selectableRows","onSelectedRowsChange","selectedRows","length","className","onClick","toast","error","isOpen","size","toggle","pagination","URL","Promise","resolve","reject","axios","BASE_API","headers","checkError","formData","put","patch"],"mappings":"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","file":"static/js/32.339f5cdc.chunk.js","sourcesContent":["//AUTH\r\nexport const register = \"/register\"\r\nexport const login = \"/login\"\r\nexport const lupaPassword = \"/lupa-password\"\r\nexport const cek_token = \"/chek-token\"\r\nexport const changePass = \"/change-password\"\r\nexport const apiGelombang = \"/gelombangPendaftaran\"\r\nexport const home = \"/home\"\r\n//\r\nexport const dashboardPeserta = \"/dashboard\"\r\nexport const peserta = \"/list-peserta\"\r\nexport const verifikasiPeserta = \"/verifikasi-peserta\"\r\nexport const biaya = \"/biaya\"\r\nexport const gelombang = \"/gelombang\"\r\nexport const detailPeserta = \"/detail-peserta\"\r\nexport const uploadNilai = \"/upload-nilai\"\r\nexport const nilai = \"/nilai\"\r\nexport const downloadNilai = \"/download-Nilai\"\r\nexport const downloadPeserta = \"/download-peserta\"\r\nexport const listpeserta = \"/listpeserta\"\r\nexport const uploadpeserta = \"/upload-peserta\"\r\nexport const detailUser = \"/get-peserta\"\r\n// UPLOAD\r\nexport const uploadExcel = \"/upload-file\"\r\nexport const updateBiodata = \"/update-bio\"\r\nexport const jumlahPerGelombang = \"/listBygelombang\"","import React, { useEffect, useState } from 'react'\r\nimport DataTable from 'react-data-table-component'\r\nimport { toast } from 'react-toastify'\r\nimport { Badge, Button, Card, CardBody, CardHeader, CardTitle, Col, Modal, ModalBody, ModalFooter, ModalHeader, Row } from 'reactstrap'\r\nimport { get, post } from \"../../../configs/apiService\"\r\nimport { peserta, verifikasiPeserta } from '../../../configs/apiurl'\r\n\r\nimport Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nconst MySwal = withReactContent(Swal)\r\n\r\nconst verifikasi = () => {\r\n    const colums = [\r\n        {\r\n            name: 'Nama',\r\n            sortable: true,\r\n            selector: row => row.name\r\n        },\r\n        {\r\n            name: 'No Registrasi',\r\n            sortable: true,\r\n            selector: row => row.id_registrasi\r\n        },\r\n        {\r\n            name: 'NISN',\r\n            sortable: true,\r\n            selector: row => row.nisn\r\n        },\r\n        {\r\n            name: 'Email',\r\n            sortable: true,\r\n            selector: row => row.email\r\n        },\r\n        {\r\n            name: 'Status',\r\n            sortable: true,\r\n            cell: (row) => (\r\n                <>\r\n                    <Badge color={row.is_verifikasi === 1 ? 'success' : \"danger\"}>{row.is_verifikasi === 1 ? 'Sudah Terverifikasi' : \"Belum Terverifikasi\"}</Badge>\r\n                </>\r\n            )\r\n        }\r\n    ]\r\n    const [data, setData] = useState([])\r\n    const [basicModal, setBasicModal] = useState(false)\r\n    const [selectedData, setSelectedData] = useState([])\r\n    const setSelectedRow = (value) => {\r\n        setSelectedData(value.selectedRows)\r\n    }\r\n\r\n    const getPeserta = () => {\r\n        get(peserta)\r\n            .then((resp) => {\r\n                if (resp && resp.data && resp.data.data) {\r\n                    setData(resp.data.data)\r\n                }\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getPeserta()\r\n    }, [])\r\n\r\n    const handleVerifikasi = () => {\r\n        if (selectedData.length > 0) {\r\n            setBasicModal(!basicModal)\r\n\r\n        } else {\r\n            toast.error(\"Peserta Belum Di Pilih\")\r\n        }\r\n    }\r\n\r\n    const handleSubmitVerif = () => {\r\n        post(verifikasiPeserta, selectedData)\r\n            .then((res) => {\r\n                if (res && res.data && res.data.response && res.data.response.status) {\r\n                    MySwal.fire({\r\n                        icon: 'success',\r\n                        title: 'Verifikasi Peserta',\r\n                        text: 'Sukses Verifikasi Peserta.',\r\n                        timer: 3000\r\n                    })\r\n                }\r\n                setBasicModal(!basicModal)\r\n                getPeserta()\r\n            }).catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const handleConfirmText = () => {\r\n        MySwal.fire({\r\n            title: 'Konfirmasi',\r\n            text: \"Apakah anda yakin verifikasi data tersebut?\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Ya',\r\n            cancelButtonText: 'Tidak',\r\n            customClass: {\r\n                confirmButton: 'btn btn-success',\r\n                cancelButton: 'btn btn-outline-danger ms-1'\r\n            },\r\n            buttonsStyling: false\r\n        }).then(function (result) {\r\n            if (result.value) {\r\n                handleSubmitVerif()\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col lg={12} sm={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <CardTitle>\r\n                                Verifikasi\r\n                            </CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <Row>\r\n                                <Col lg={12} md={12}>\r\n                                    <DataTable\r\n                                        columns={colums}\r\n                                        selectableRows\r\n                                        data={data}\r\n                                        onSelectedRowsChange={setSelectedRow}\r\n                                    />\r\n                                </Col>\r\n                                {data.length > 0 &&\r\n                                    <Col lg={12} md={12} className=\"mt-2\">\r\n                                        <Button color='success' onClick={() => handleVerifikasi()}>Verifikasi</Button>\r\n                                    </Col>\r\n                                }\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Modal isOpen={basicModal} size={\"lg\"} toggle={() => setBasicModal(!basicModal)}>\r\n                <ModalHeader toggle={() => setBasicModal(!basicModal)}>Verifikasi</ModalHeader>\r\n                <ModalBody>\r\n                    <DataTable\r\n                        columns={colums}\r\n                        data={selectedData}\r\n                        pagination\r\n                    />\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <Button color='success' onClick={() => handleConfirmText()}>\r\n                        Verifikasi\r\n                    </Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default verifikasi","import { checkError, headers, BASE_API, BASE_API_IMAGE } from \"./config\"\r\nimport axios from \"axios\"\r\n\r\nexport const get = (URL) => {\r\n  return new Promise((resolve, reject) => axios.get(`${BASE_API}${URL}`, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    }).catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n\r\nexport const post = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.post(BASE_API + URL, formData, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    })\r\n    .catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n\r\nexport const put = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.put(BASE_API + URL, formData, headers)\r\n      .then((res) => {\r\n        resolve(res)\r\n      })\r\n      .catch((error) => {\r\n        checkError(error)\r\n        reject(error)\r\n      })\r\n  )\r\n}\r\n\r\nexport const patch = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.patch(BASE_API + URL, formData, headers)\r\n      .then((res) => {\r\n        resolve(res)\r\n      })\r\n      .catch((error) => {\r\n        checkError(error)\r\n        reject(error)\r\n      })\r\n  )\r\n}\r\n\r\nexport const download = (URL) => {\r\n  return new Promise((resolve, reject) => axios.get(`${BASE_API_IMAGE}${URL}`, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    }).catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n"],"sourceRoot":""}