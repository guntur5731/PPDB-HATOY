{"version":3,"sources":["configs/apiurl.js","views/admin/gelombang/jmlPerGeolbang.js","configs/apiService.js"],"names":["register","lupaPassword","cek_token","changePass","apiGelombang","home","dashboardPeserta","peserta","verifikasiPeserta","biaya","gelombang","detailPeserta","uploadNilai","nilai","downloadNilai","downloadPeserta","listpeserta","uploadpeserta","detailUser","uploadExcel","updateBiodata","jumlahPerGelombang","jmlPerGeolbang","useState","data","setData","loading","setLoading","filterData","setFilteredData","searchValue","setSearchValue","colums","name","sortable","selector","row","tahun_ajaran","jumlah","useEffect","get","then","resp","catch","err","console","log","sm","md","className","for","type","bsSize","id","value","onChange","e","updatedData","length","filter","item","startsWith","toLowerCase","gel","includes","handleFilter","target","columns","progressPending","pagination","URL","Promise","resolve","reject","axios","BASE_API","headers","res","error","checkError","post","formData","put","patch"],"mappings":"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","file":"static/js/30.c46aa97c.chunk.js","sourcesContent":["//AUTH\r\nexport const register = \"/register\"\r\nexport const login = \"/login\"\r\nexport const lupaPassword = \"/lupa-password\"\r\nexport const cek_token = \"/chek-token\"\r\nexport const changePass = \"/change-password\"\r\nexport const apiGelombang = \"/gelombangPendaftaran\"\r\nexport const home = \"/home\"\r\n//\r\nexport const dashboardPeserta = \"/dashboard\"\r\nexport const peserta = \"/list-peserta\"\r\nexport const verifikasiPeserta = \"/verifikasi-peserta\"\r\nexport const biaya = \"/biaya\"\r\nexport const gelombang = \"/gelombang\"\r\nexport const detailPeserta = \"/detail-peserta\"\r\nexport const uploadNilai = \"/upload-nilai\"\r\nexport const nilai = \"/nilai\"\r\nexport const downloadNilai = \"/download-Nilai\"\r\nexport const downloadPeserta = \"/download-peserta\"\r\nexport const listpeserta = \"/listpeserta\"\r\nexport const uploadpeserta = \"/upload-peserta\"\r\nexport const detailUser = \"/get-peserta\"\r\n// UPLOAD\r\nexport const uploadExcel = \"/upload-file\"\r\nexport const updateBiodata = \"/update-bio\"\r\nexport const jumlahPerGelombang = \"/listBygelombang\"","import React, { useEffect, useState } from 'react'\r\nimport DataTable from 'react-data-table-component'\r\nimport { Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row, UncontrolledButtonDropdown } from 'reactstrap'\r\nimport { get } from '../../../configs/apiService'\r\nimport { jumlahPerGelombang } from '../../../configs/apiurl'\r\n// import { BASE_API_DOWNLOAD, CODE_EXPORT_EXCEL } from '../../../configs/config'\r\n\r\nexport default function jmlPerGeolbang() {\r\n    const [data, setData] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [filterData, setFilteredData] = useState([])\r\n    const [searchValue, setSearchValue] = useState(\"\")\r\n    const colums = [\r\n        {\r\n            name: 'Gelombang',\r\n            sortable: true,\r\n            selector: row => <div>{row.gelombang}</div>\r\n        },\r\n        {\r\n            name: 'Tahun Ajaran',\r\n            sortable: true,\r\n            selector: row => row.tahun_ajaran\r\n        },\r\n        {\r\n            name: 'Jumlah',\r\n            sortable: true,\r\n            selector: row => row.jumlah\r\n        }\r\n    ]\r\n\r\n    const getList = () => {\r\n        setLoading(true)\r\n        get(jumlahPerGelombang)\r\n            .then((resp) => {\r\n                if (resp && resp.data && resp.data.data) {\r\n                    setData(resp.data.data)\r\n                }\r\n                setLoading(false)\r\n            }).catch((err) => {\r\n                console.log(err)\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getList()\r\n    }, [])\r\n    const handleFilter = (value) => {\r\n        let updatedData = []\r\n        setSearchValue(value)\r\n        if (value.length) {\r\n          updatedData = data.filter(item => {\r\n            const startsWith =\r\n              item.gelombang.toLowerCase().startsWith(value.toLowerCase())\r\n              || item.tahun_ajaran.toLowerCase().startsWith(value.toLowerCase())\r\n              || item.gel.toLowerCase().startsWith(value.toLowerCase())\r\n    \r\n            const includes =\r\n              item.gelombang.toLowerCase().startsWith(value.toLowerCase())\r\n              || item.tahun_ajaran.toLowerCase().startsWith(value.toLowerCase())\r\n              || item.gel.toLowerCase().startsWith(value.toLowerCase())\r\n    \r\n            if (startsWith) {\r\n              return startsWith\r\n            } else if (!startsWith && includes) {\r\n              return includes\r\n            } else return null\r\n          })\r\n          setFilteredData(updatedData)\r\n        }\r\n      }\r\n    return (\r\n        <div>\r\n            <Row>\r\n                <Col sm={12} md={12}>\r\n                    <Card>\r\n                        <CardHeader>\r\n                            <CardTitle>Jumlah Peserta Berdasarkan Gelombang</CardTitle>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            <Row>\r\n                                <Col className='mt-1' md='6' sm='12'>\r\n                                    {/* <Button size='sm' color='success' onClick={() => setCenteredModal(!centeredModal)}>Upload</Button>\r\n                                    <UncontrolledButtonDropdown size='sm' style={{ marginLeft: \"10px\" }}>\r\n                                        <DropdownToggle color='info' caret>\r\n                                            Download\r\n                                        </DropdownToggle>\r\n                                        <DropdownMenu>\r\n                                            <DropdownItem tag='a' onClick={() => toast.warning(\"COMING SOON\")}>\r\n                                                CSV\r\n                                            </DropdownItem>\r\n                                            <DropdownItem tag='a' target=\"_blank\" href={`${BASE_API_DOWNLOAD}${downloadPeserta}?type=${CODE_EXPORT_EXCEL}`}>\r\n                                                Excel\r\n                                            </DropdownItem>\r\n                                            <DropdownItem tag='a' onClick={() => toast.warning(\"COMING SOON\")}>\r\n                                                Pdf\r\n                                            </DropdownItem>\r\n                                        </DropdownMenu>\r\n                                    </UncontrolledButtonDropdown> */}\r\n                                </Col>\r\n                                <Col className='d-flex align-items-center justify-content-end mt-1' md='6' sm='12'>\r\n                                    <Label className='me-1' for='search-input'>\r\n                                        Search\r\n                                    </Label>\r\n                                    <Input\r\n                                        className='dataTable-filter mb-50'\r\n                                        type='text'\r\n                                        bsSize='sm'\r\n                                        id='search-input'\r\n                                    value={searchValue}\r\n                                    onChange={(e) => handleFilter(e.target.value)}\r\n                                    />\r\n                                </Col>\r\n                                <DataTable columns={colums} data={searchValue.length ? filterData : data} progressPending={loading} pagination />\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","import { checkError, headers, BASE_API, BASE_API_IMAGE } from \"./config\"\r\nimport axios from \"axios\"\r\n\r\nexport const get = (URL) => {\r\n  return new Promise((resolve, reject) => axios.get(`${BASE_API}${URL}`, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    }).catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n\r\nexport const post = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.post(BASE_API + URL, formData, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    })\r\n    .catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n\r\nexport const put = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.put(BASE_API + URL, formData, headers)\r\n      .then((res) => {\r\n        resolve(res)\r\n      })\r\n      .catch((error) => {\r\n        checkError(error)\r\n        reject(error)\r\n      })\r\n  )\r\n}\r\n\r\nexport const patch = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.patch(BASE_API + URL, formData, headers)\r\n      .then((res) => {\r\n        resolve(res)\r\n      })\r\n      .catch((error) => {\r\n        checkError(error)\r\n        reject(error)\r\n      })\r\n  )\r\n}\r\n\r\nexport const download = (URL) => {\r\n  return new Promise((resolve, reject) => axios.get(`${BASE_API_IMAGE}${URL}`, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    }).catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n"],"sourceRoot":""}