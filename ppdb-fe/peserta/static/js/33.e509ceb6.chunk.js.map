{"version":3,"sources":["url/index.js","views/pengaturan/masterBayaran/add.js","configs/apiService.js"],"names":["login","jurusan","kelas","tahunAjaran","jenisPembayaran","masterBayaran","masterBayaranList","Add","useState","tahunAjar","setTahunAjar","idTahunAjaran","idTypeKelas","inputData","setInputData","validation","setValidation","tipeKelas","setTipeKelas","listFormPembayaran","setListFormPembayaran","useEffect","get","then","resp","data","length","forEach","item","push","value","id_tahun","label","tahun_ajaran","allData","catch","error","console","log","handleTahunAjaran","e","tahun","btoa","list","v","handleTypeKelas","id_jenis_pem","idTahun","idType","keterangan","jumlah","required","md","sm","className","classnames","classNamePrefix","options","isClearable","find","onChange","map","index","type","defaultValue","target","handleKeterangan","onClick","color","URL","Promise","resolve","reject","axios","BASE_API","headers","res","checkError","post","formData","put","patch"],"mappings":"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","file":"static/js/33.e509ceb6.chunk.js","sourcesContent":["export const login = \"/login\"\r\nexport const jurusan = \"/jurusan\"\r\nexport const kelas = \"/kelas\"\r\nexport const tahunAjaran = \"/tahun-ajaran\"\r\nexport const jenisPembayaran = \"/jenis-pembayaran\"\r\nexport const masterBayaran = \"/master-bayaran\"\r\nexport const masterBayaranList = \"/master-bayaran/list\"","import React, { useEffect, useState } from 'react'\r\nimport { Button, Card, CardBody, CardHeader, CardTitle, Col, Input, Label, Row } from 'reactstrap'\r\nimport Select from 'react-select'\r\nimport { get } from '../../../configs/apiService'\r\nimport { tahunAjaran, masterBayaranList, jenisPembayaran } from '../../../url'\r\nimport classnames from 'classnames'\r\nfunction Add() {\r\n    const [tahunAjar, setTahunAjar] = useState([])\r\n    const [inputData, setInputData] = useState({\r\n        idTahunAjaran: \"\",\r\n        idTypeKelas: \"\"\r\n    })\r\n    const [validation, setValidation] = useState({\r\n        idTahunAjaran: \"\",\r\n        idTypeKelas: \"\"\r\n    })\r\n    const [tipeKelas, setTipeKelas] = useState([])\r\n    const [listFormPembayaran, setListFormPembayaran] = useState([])\r\n\r\n    const getTahunAjar = () => {\r\n        get(tahunAjaran).then((resp) => {\r\n            if (resp.data.data && resp.data.data.length > 0) {\r\n                const data = []\r\n                resp.data.data.forEach((item) => {\r\n                    data.push({ value: item.id_tahun, label: item.tahun_ajaran, allData: item })\r\n                })\r\n                setTahunAjar(data)\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    const listBayar = (tahun) => {\r\n        get(`${masterBayaranList}?tahun=${btoa(tahun)}`).then((resp) => {\r\n            if (resp.data.data && resp.data.data.length > 0) {\r\n                const list = []\r\n                list.push({ value: \"\", label: \"Pilih Tipe Kelas\" })\r\n                if (resp.data.data.length) {\r\n                    resp.data.data.forEach(v => {\r\n                        list.push(v)\r\n                    })\r\n                }\r\n                setTipeKelas(list)\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    const getListBayaran = () => {\r\n        get(jenisPembayaran).then((resp) => {\r\n            if (resp.data.data && resp.data.data.length > 0) {\r\n                const list = []\r\n                resp.data.data.forEach(v => {\r\n                    list.push({\r\n                        id_jenis_pem: v.id_jenis_pem,\r\n                        idTahun: inputData.idTahunAjaran,\r\n                        idType: inputData.idTypeKelas,\r\n                        keterangan: v.keterangan,\r\n                        jumlah: 0,\r\n                        required: false\r\n                    })\r\n                })\r\n                setListFormPembayaran(list)\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    const onSubmit = () => {\r\n        if (inputData.idTahunAjaran === \"\" || inputData.idTypeKelas === \"\") {\r\n            setValidation({\r\n                ...validation,\r\n                idTahunAjaran: inputData.idTahunAjaran === \"\" ? true : \"\",\r\n                idTypeKelas: inputData.idTypeKelas === \"\" ? true : \"\"\r\n            })\r\n        } else {\r\n            listFormPembayaran[0].required = true\r\n            console.log(listFormPembayaran[0])\r\n            setListFormPembayaran(listFormPembayaran)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTahunAjar()\r\n    }, [])\r\n\r\n    const handleTahunAjaran = (e) => {\r\n        setListFormPembayaran([])\r\n        setTipeKelas([])\r\n        listBayar(e.value)\r\n        setInputData({ ...inputData, idTahunAjaran: e.value, idTypeKelas: \"\" })\r\n        setValidation({ ...validation, idTahunAjaran: \"\" })\r\n    }\r\n\r\n    const handleTypeKelas = (e) => {\r\n        getListBayaran(e.value)\r\n        setListFormPembayaran([])\r\n        setInputData({ ...inputData, idTypeKelas: e.value })\r\n        setValidation({ ...validation, idTypeKelas: \"\" })\r\n    }\r\n\r\n    const handleKeterangan = (index, e) => {\r\n        listFormPembayaran[index].jumlah = e.target.value\r\n    }\r\n    return (\r\n        <Card>\r\n            <CardHeader>\r\n                <CardTitle>\r\n                    Tambah Data Master Pembayaran\r\n                </CardTitle>\r\n            </CardHeader>\r\n            <CardBody>\r\n                <Row>\r\n                    <Col md={6} sm={12} className={'mb-2'}>\r\n                        <Label>Tahun Ajaran</Label>\r\n                        <Select\r\n                            className={classnames('react-select', { 'is-invalid': validation.idTahunAjaran !== \"\" })}\r\n                            classNamePrefix='select'\r\n                            options={tahunAjar}\r\n                            isClearable={false}\r\n                            value={tahunAjar && tahunAjar.find(item => item.value === inputData.idTahunAjaran)}\r\n                            onChange={(e) => {\r\n                                handleTahunAjaran(e)\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                    <Col md={6} sm={12} className={'mb-2'}>\r\n                        <Label>Tipe Kelas</Label>\r\n                        <Select\r\n                            className={classnames('react-select', { 'is-invalid': validation.idTypeKelas !== \"\" })}\r\n                            classNamePrefix='select'\r\n                            options={tipeKelas}\r\n                            isClearable={false}\r\n                            value={tipeKelas && tipeKelas.find(item => item.value === inputData.idTypeKelas)}\r\n                            onChange={(e) => {\r\n                                handleTypeKelas(e)\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12} sm={12} className={'mb-2'}>\r\n                        {listFormPembayaran.length ? listFormPembayaran.map(function (item, index) {\r\n                            return (\r\n                                <Col md={12} sm={12} className={'mb-2'} key={index}>\r\n                                    <Label>{item.keterangan}</Label>\r\n                                    <Input type='text' defaultValue={item.jumlah}\r\n                                        className={item.required ? 'is-invalid' : \"\"}\r\n                                        onChange={(e) => {\r\n                                            handleKeterangan(index, e)\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            )\r\n                        }) : \"\"}\r\n                    </Col>\r\n                    <Col md={12} sm={12} className=\"mt-1\">\r\n                        <Button onClick={() => onSubmit()} type='button' color='primary'>Simpan</Button>\r\n                    </Col>\r\n                </Row>\r\n            </CardBody>\r\n        </Card>\r\n    )\r\n}\r\nexport default Add","import { checkError, headers, BASE_API, BASE_API_IMAGE } from \"./config\"\r\nimport axios from \"axios\"\r\n\r\nexport const get = (URL) => {\r\n  return new Promise((resolve, reject) => axios.get(`${BASE_API}${URL}`, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    }).catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n\r\nexport const post = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.post(BASE_API + URL, formData, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    })\r\n    .catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n\r\nexport const put = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.put(BASE_API + URL, formData, headers)\r\n      .then((res) => {\r\n        resolve(res)\r\n      })\r\n      .catch((error) => {\r\n        checkError(error)\r\n        reject(error)\r\n      })\r\n  )\r\n}\r\n\r\nexport const patch = (URL, formData) => {\r\n  return new Promise((resolve, reject) => axios.patch(BASE_API + URL, formData, headers)\r\n      .then((res) => {\r\n        resolve(res)\r\n      })\r\n      .catch((error) => {\r\n        checkError(error)\r\n        reject(error)\r\n      })\r\n  )\r\n}\r\n\r\nexport const download = (URL) => {\r\n  return new Promise((resolve, reject) => axios.get(`${BASE_API_IMAGE}${URL}`, headers)\r\n    .then((res) => {\r\n      resolve(res)\r\n    }).catch((error) => {\r\n      checkError(error)\r\n      reject(error)\r\n    })\r\n  )\r\n}\r\n"],"sourceRoot":""}